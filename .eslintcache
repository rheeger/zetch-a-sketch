[{"/Users/rheeger/Code/github.com/rheeger/zetch-a-sketch/src/index.tsx":"1","/Users/rheeger/Code/github.com/rheeger/zetch-a-sketch/src/App.tsx":"2","/Users/rheeger/Code/github.com/rheeger/zetch-a-sketch/src/hooks/usePainter.ts":"3","/Users/rheeger/Code/github.com/rheeger/zetch-a-sketch/src/components/Goo.tsx":"4","/Users/rheeger/Code/github.com/rheeger/zetch-a-sketch/src/components/Canvas.tsx":"5","/Users/rheeger/Code/github.com/rheeger/zetch-a-sketch/src/components/Toolbar.tsx":"6","/Users/rheeger/Code/github.com/rheeger/zetch-a-sketch/src/components/Intro.tsx":"7","/Users/rheeger/Code/github.com/rheeger/zetch-a-sketch/src/components/BrushPreview.tsx":"8","/Users/rheeger/Code/github.com/rheeger/zetch-a-sketch/src/components/Web3Modal.tsx":"9","/Users/rheeger/Code/github.com/rheeger/zetch-a-sketch/src/styles.ts":"10","/Users/rheeger/Code/github.com/rheeger/zetch-a-sketch/src/components/Column.tsx":"11","/Users/rheeger/Code/github.com/rheeger/zetch-a-sketch/src/components/Button.tsx":"12","/Users/rheeger/Code/github.com/rheeger/zetch-a-sketch/src/components/Wrapper.tsx":"13","/Users/rheeger/Code/github.com/rheeger/zetch-a-sketch/src/components/Header.tsx":"14","/Users/rheeger/Code/github.com/rheeger/zetch-a-sketch/src/components/Modal.tsx":"15","/Users/rheeger/Code/github.com/rheeger/zetch-a-sketch/src/components/Loader.tsx":"16","/Users/rheeger/Code/github.com/rheeger/zetch-a-sketch/src/components/ModalResult.tsx":"17","/Users/rheeger/Code/github.com/rheeger/zetch-a-sketch/src/components/ConnectButton.tsx":"18","/Users/rheeger/Code/github.com/rheeger/zetch-a-sketch/src/helpers/api.ts":"19","/Users/rheeger/Code/github.com/rheeger/zetch-a-sketch/src/helpers/utilities.ts":"20","/Users/rheeger/Code/github.com/rheeger/zetch-a-sketch/src/helpers/chains.ts":"21","/Users/rheeger/Code/github.com/rheeger/zetch-a-sketch/src/components/Banner.tsx":"22","/Users/rheeger/Code/github.com/rheeger/zetch-a-sketch/src/components/Blockie.tsx":"23","/Users/rheeger/Code/github.com/rheeger/zetch-a-sketch/src/hooks/useIpfs.ts":"24","/Users/rheeger/Code/github.com/rheeger/zetch-a-sketch/src/helpers/storeHash.ts":"25","/Users/rheeger/Code/github.com/rheeger/zetch-a-sketch/src/helpers/web3.ts":"26","/Users/rheeger/Code/github.com/rheeger/zetch-a-sketch/src/hooks/useActiveWeb3React.ts":"27"},{"size":553,"mtime":1613177717855,"results":"28","hashOfConfig":"29"},{"size":1046,"mtime":1613414406577,"results":"30","hashOfConfig":"29"},{"size":6042,"mtime":1612424089435,"results":"31","hashOfConfig":"29"},{"size":703,"mtime":1612424089433,"results":"32","hashOfConfig":"29"},{"size":662,"mtime":1612424089432,"results":"33","hashOfConfig":"29"},{"size":4384,"mtime":1613181753662,"results":"34","hashOfConfig":"29"},{"size":564,"mtime":1613175687600,"results":"35","hashOfConfig":"29"},{"size":567,"mtime":1612424089432,"results":"36","hashOfConfig":"29"},{"size":5718,"mtime":1613415732160,"results":"37","hashOfConfig":"29"},{"size":4243,"mtime":1612470039143,"results":"38","hashOfConfig":"29"},{"size":1178,"mtime":1612465524051,"results":"39","hashOfConfig":"29"},{"size":3453,"mtime":1612465523956,"results":"40","hashOfConfig":"29"},{"size":979,"mtime":1612465524909,"results":"41","hashOfConfig":"29"},{"size":2132,"mtime":1613176444696,"results":"42","hashOfConfig":"29"},{"size":4179,"mtime":1612465524739,"results":"43","hashOfConfig":"29"},{"size":1984,"mtime":1612465524585,"results":"44","hashOfConfig":"29"},{"size":1734,"mtime":1612465524829,"results":"45","hashOfConfig":"29"},{"size":3352,"mtime":1612470314864,"results":"46","hashOfConfig":"29"},{"size":1258,"mtime":1612467257153,"results":"47","hashOfConfig":"29"},{"size":4950,"mtime":1612468745183,"results":"48","hashOfConfig":"29"},{"size":4056,"mtime":1612467257155,"results":"49","hashOfConfig":"29"},{"size":707,"mtime":1612465523754,"results":"50","hashOfConfig":"29"},{"size":953,"mtime":1612465523855,"results":"51","hashOfConfig":"29"},{"size":391,"mtime":1612472069732,"results":"52","hashOfConfig":"29"},{"size":762,"mtime":1612472330473,"results":"53","hashOfConfig":"29"},{"size":245,"mtime":1612472519792,"results":"54","hashOfConfig":"29"},{"size":241,"mtime":1613010758260,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"c6fqg0",{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"58"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"58"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"58"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"58"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"58"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},"/Users/rheeger/Code/github.com/rheeger/zetch-a-sketch/src/index.tsx",[],["120","121"],"/Users/rheeger/Code/github.com/rheeger/zetch-a-sketch/src/App.tsx",["122","123"],"import React, { useState, useCallback } from \"react\";\nimport { Canvas } from \"./components/Canvas\";\nimport { Intro } from \"./components/Intro\";\nimport { Toolbar } from \"./components/Toolbar\";\nimport { usePainter } from \"./hooks/usePainter\";\n\nconst App = () => {\n  const [dateUrl, setDataUrl] = useState(\"#\") as any;\n  const [{ canvas, isReady, ...state }, { init, ...api }] = usePainter();\n\n  const handleDownload = useCallback(async () => {\n    if (!canvas || !canvas.current) return;\n    const string = canvas.current.toDataURL(\"image/png\")\n    const regex = /^data:.+\\/(.+);base64,(.*)$/;\n\n    const matches = string.match(regex);\n    const ext = matches[1];\n    const data = matches[2];\n    const buffer = Buffer.from(data, 'base64');\n\n    return buffer\n  }, [canvas]);\n\n  const toolbarProps = { ...state, ...api, dateUrl, handleDownload };\n\n  return (\n    <>\n      <Intro isReady={isReady} init={init} />\n      <Toolbar {...toolbarProps} />\n      <Canvas width={state.currentWidth} canvasRef={canvas} />\n    </>\n  );\n};\n\nexport default App;\n","/Users/rheeger/Code/github.com/rheeger/zetch-a-sketch/src/hooks/usePainter.ts",[],"/Users/rheeger/Code/github.com/rheeger/zetch-a-sketch/src/components/Goo.tsx",[],["124","125"],"/Users/rheeger/Code/github.com/rheeger/zetch-a-sketch/src/components/Canvas.tsx",[],"/Users/rheeger/Code/github.com/rheeger/zetch-a-sketch/src/components/Toolbar.tsx",["126"],"import {\n  faArrowsAltH,\n  faEraser,\n  faMagic,\n  faPaintBrush,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React, { useState } from \"react\";\nimport { BrushPreview } from \"./BrushPreview\";\nimport WalletConnectionModal from \"./Web3Modal\";\n\nexport const Toolbar: React.FC<any> = ({\n  currentWidth,\n  currentColor,\n  handleDownload,\n  dateUrl,\n  handleClear,\n  handleSpecialMode,\n  handleEraserMode,\n  setAutoWidth,\n  handleRegularMode,\n  handleColor,\n  handleWidth,\n  setCurrentSaturation,\n  setCurrentLightness,\n  isRegularMode,\n  isAutoWidth,\n  isEraser,\n}) => {\n  return (\n    <aside>\n      <div>\n        <WalletConnectionModal handleDownload={handleDownload} />\n        <button className=\"btn btn--block\" onClick={handleClear}>\n          Reset\n        </button>\n      </div>\n      <div>\n        <BrushPreview currentWidth={currentWidth} currentColor={currentColor} />\n        <div className=\"tool-section tool-section--lrg\">\n          <div className=\"tool-section\">\n            <small>\n              <strong>Brush color</strong>\n            </small>\n          </div>\n          <input\n            disabled={!isRegularMode}\n            className=\"btn--color\"\n            type=\"color\"\n            id=\"toolColorPicker\"\n            onChange={handleColor}\n          />\n        </div>\n        <div className=\"tool-section\">\n          <small>\n            <strong>Tools</strong>\n          </small>\n        </div>\n        <div className=\"tool-grid tool-section tool-section--lrg\">\n          <div>\n            <button\n              className={`btn btn--tool ${isRegularMode && !isEraser ? \"btn--active\" : \"\"\n                }`}\n              onClick={handleRegularMode}\n            >\n              <FontAwesomeIcon icon={faPaintBrush} />\n            </button>\n          </div>\n          <div>\n            <button\n              className={`btn btn--tool ${!isRegularMode ? \"btn--dream-active\" : \"\"\n                }`}\n              onClick={handleSpecialMode}\n            >\n              <FontAwesomeIcon icon={faMagic} />\n            </button>\n          </div>\n          <div>\n            <button\n              className={`btn btn--tool ${isEraser ? \"btn--eraser-active\" : \"\"\n                }`}\n              onClick={handleEraserMode}\n            >\n              <FontAwesomeIcon icon={faEraser} />\n            </button>\n          </div>\n          <div>\n            <input\n              disabled={isEraser}\n              checked={isAutoWidth}\n              id=\"tool-autowidth\"\n              type=\"checkbox\"\n              onChange={setAutoWidth}\n              title=\"Dynamic brush size\"\n            />{\" \"}\n            <label\n              htmlFor=\"tool-autowidth\"\n              className={`btn btn--tool ${isAutoWidth ? \"btn--width-active\" : \"\"\n                }`}\n            >\n              <FontAwesomeIcon icon={faArrowsAltH} />\n            </label>\n          </div>\n        </div>\n        {!isAutoWidth && (\n          <div className=\"tool-section tool-section--lrg\">\n            <div className=\"tool-section\">\n              <small>\n                <strong>Brush size</strong>\n              </small>\n            </div>\n            <div className=\"tool-section\">\n              <input\n                defaultValue=\"50\"\n                type=\"range\"\n                min=\"10\"\n                max=\"90\"\n                onChange={handleWidth}\n              />\n            </div>\n          </div>\n        )}\n        {!isRegularMode && (\n          <div className=\"tool-section tool-section--lrg\">\n            <div className=\"tool-section\">\n              <small>\n                <strong>Magic brush</strong>\n              </small>\n            </div>\n            <div className=\"tool-section\">\n              <label>\n                <small>Saturation</small>\n              </label>\n              <input\n                defaultValue=\"100\"\n                type=\"range\"\n                min=\"0\"\n                max=\"100\"\n                onChange={setCurrentSaturation}\n              />\n            </div>\n            <label>\n              <small>Lightness</small>\n            </label>\n            <input\n              defaultValue=\"50\"\n              type=\"range\"\n              min=\"0\"\n              max=\"100\"\n              onChange={setCurrentLightness}\n            />\n          </div>\n        )}\n      </div>\n    </aside>\n  );\n};\n","/Users/rheeger/Code/github.com/rheeger/zetch-a-sketch/src/components/Intro.tsx",[],"/Users/rheeger/Code/github.com/rheeger/zetch-a-sketch/src/components/BrushPreview.tsx",[],"/Users/rheeger/Code/github.com/rheeger/zetch-a-sketch/src/components/Web3Modal.tsx",["127"],"import * as React from \"react\";\nimport styled from \"styled-components\";\nimport Web3 from \"web3\";\n\nimport Web3Modal from \"web3modal\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport Header from \"./Header\";\nimport ConnectButton from \"./ConnectButton\";\n\nimport {\n  getChainData\n} from \"../helpers/utilities\";\n\nimport ipfs from \"../hooks/useIpfs\";\nimport { constructMediaData, sha256FromBuffer, generateMetadata, constructBidShares, Zora } from '@zoralabs/zdk';\nimport { ethers } from \"ethers\"\n\nconst SLayout = styled.div`\n  position: relative;\n  width: 100%;\n  text-align: center;\n`;\ninterface IAppState {\n  fetching: boolean;\n  address: string;\n  web3: any;\n  provider: any;\n  connected: boolean;\n  chainId: number;\n  networkId: number;\n  showModal: boolean;\n  pendingRequest: boolean;\n  result: any | null;\n}\n\nconst INITIAL_STATE: IAppState = {\n  fetching: false,\n  address: \"\",\n  web3: null,\n  provider: null,\n  connected: false,\n  chainId: 1,\n  networkId: 1,\n  showModal: false,\n  pendingRequest: false,\n  result: null\n};\n\nfunction initWeb3(provider: any) {\n  const web3: any = new Web3(provider);\n\n  web3.eth.extend({\n    methods: [\n      {\n        name: \"chainId\",\n        call: \"eth_chainId\",\n        outputFormatter: web3.utils.hexToNumber\n      }\n    ]\n  });\n\n  return web3;\n}\nclass WalletConnectionModal extends React.Component<any, any> {\n  // @ts-ignore\n  public web3Modal: Web3Modal;\n  public state: IAppState;\n\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      ...INITIAL_STATE\n    };\n\n    this.web3Modal = new Web3Modal({\n      network: this.getNetwork(),\n      cacheProvider: true,\n      providerOptions: this.getProviderOptions()\n    });\n  }\n\n  public componentDidMount() {\n    if (this.web3Modal.cachedProvider) {\n      this.onConnect();\n    }\n  }\n\n  public onConnect = async () => {\n    const provider = await this.web3Modal.connect();\n    await this.subscribeProvider(provider);\n    const web3: any = initWeb3(provider);\n    const accounts = await web3.eth.getAccounts();\n    const address = accounts[0];\n    const networkId = await web3.eth.net.getId();\n    const chainId = await web3.eth.chainId();\n    await this.setState({\n      web3,\n      provider,\n      connected: true,\n      address,\n      chainId,\n      networkId\n    });\n  };\n\n  public subscribeProvider = async (provider: any) => {\n    if (!provider.on) {\n      return;\n    }\n    provider.on(\"close\", () => this.resetApp());\n    provider.on(\"accountsChanged\", async (accounts: string[]) => {\n      await this.setState({ address: accounts[0] });\n    });\n    provider.on(\"chainChanged\", async (chainId: number) => {\n      const { web3 } = this.state;\n      const networkId = await web3.eth.net.getId();\n      await this.setState({ chainId, networkId });\n    });\n\n    provider.on(\"networkChanged\", async (networkId: number) => {\n      const { web3 } = this.state;\n      const chainId = await web3.eth.chainId();\n      await this.setState({ chainId, networkId });\n    });\n  };\n\n  public getNetwork = () => getChainData(this.state.chainId).network;\n\n  public getProviderOptions = () => {\n    const providerOptions = {\n      walletconnect: {\n        package: WalletConnectProvider,\n        options: {\n          infuraId: \"6c3c2b62c28f43e39145fc5e002dd2db\"\n        }\n      }\n    };\n    return providerOptions;\n  };\n\n  public toggleModal = () =>\n    this.setState({ showModal: !this.state.showModal });\n\n\n  public resetApp = async () => {\n    const { web3 } = this.state;\n    if (web3 && web3.currentProvider && web3.currentProvider.close) {\n      await web3.currentProvider.close();\n    }\n    await this.web3Modal.clearCachedProvider();\n    this.setState({ ...INITIAL_STATE });\n  };\n\n  public zoraMint = async (buffer: Buffer) => {\n    const { web3, chainId, address } = this.state;\n\n    const metadataJSON = generateMetadata('zora-20210101', {\n      description: `An artwork made by: ${address}`,\n      mimeType: 'image/png',\n      name: `ZaS ${address.slice(0, 2) + '...' + address.slice(-4)} #1`,\n      version: 'zora-20210101',\n    })\n    console.log(metadataJSON)\n    const metadataHash = sha256FromBuffer(Buffer.from(metadataJSON))\n    const contentHash = sha256FromBuffer(buffer)\n    const ipfsMetadataHash = await ipfs.add(Buffer.from(metadataJSON))\n    const ipfsContentHash = await ipfs.add(buffer)\n    console.log(metadataHash, ipfsMetadataHash, contentHash, ipfsContentHash)\n    const mediaData = constructMediaData(\n      `https://ipfs.io/ipfs/${ipfsContentHash[0].hash}`,\n      `https://ipfs.io/ipfs/${ipfsMetadataHash[0].hash}`,\n      contentHash,\n      metadataHash\n    )\n    const bidShares = constructBidShares(\n      48, // creator share\n      51, // owner share\n      1 // prevOwner share\n    )\n    console.log(web3)\n    const signer = (new ethers.providers.Web3Provider(web3.currentProvider)).getSigner()\n    const zora = new Zora(signer, chainId)\n    const tx = await zora.mint(mediaData, bidShares)\n    await tx.wait(8) // 8 confirmations to finalize\n  }\n\n  public render = () => {\n    const {\n      address,\n      connected,\n      chainId,\n    } = this.state;\n    return (\n      <SLayout>\n        {address ? <Header\n          connected={connected}\n          address={address}\n          chainId={chainId}\n          killSession={this.resetApp}\n        /> : <ConnectButton text=\"Connect Wallet\" onClick={this.onConnect} />}\n        <a\n          className=\"btn btn--main btn--block\"\n          download=\"image.png\"\n          onClick={async () => {\n            const imageData = await this.props.handleDownload()\n            this.zoraMint(imageData)\n          }\n          }\n        >\n          Mint\n        </a>\n      </SLayout>\n    );\n  };\n}\n\nexport default WalletConnectionModal;\n","/Users/rheeger/Code/github.com/rheeger/zetch-a-sketch/src/styles.ts",[],"/Users/rheeger/Code/github.com/rheeger/zetch-a-sketch/src/components/Column.tsx",[],"/Users/rheeger/Code/github.com/rheeger/zetch-a-sketch/src/components/Button.tsx",[],"/Users/rheeger/Code/github.com/rheeger/zetch-a-sketch/src/components/Wrapper.tsx",[],"/Users/rheeger/Code/github.com/rheeger/zetch-a-sketch/src/components/Header.tsx",["128","129"],"import * as React from \"react\";\nimport styled from \"styled-components\";\nimport * as PropTypes from \"prop-types\";\nimport Blockie from \"./Blockie\";\nimport Banner from \"./Banner\";\nimport { ellipseAddress, getChainData } from \"../helpers/utilities\";\nimport { transitions } from \"../styles\";\n\nconst SHeader = styled.div`\n  margin-top: -1px;\n  margin-bottom: 1px;\n  height: 73px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0 10px;\n`;\n\nconst SActiveAccount = styled.div`\n  display: flex;\n  align-items: center;\n  position: relative;\n  font-weight: 500;\n`;\n\nconst SBlockie = styled(Blockie)`\n  margin-right: 10px;\n`;\n\ninterface IHeaderStyle {\n  connected: boolean;\n}\n\nconst SAddress = styled.p<IHeaderStyle>`\n  transition: ${transitions.base};\n  font-weight: bold;\n  margin: ${({ connected }) => (connected ? \"-2px auto 0.7em\" : \"0\")};\n`;\n\nconst SDisconnect = styled.div<IHeaderStyle>`\n  transition: ${transitions.button};\n  font-size: 12px;\n  font-family: monospace;\n  position: absolute;\n  right: 0;\n  top: 20px;\n  opacity: 0.7;\n  cursor: pointer;\n\n  opacity: ${({ connected }) => (connected ? 1 : 0)};\n  visibility: ${({ connected }) => (connected ? \"visible\" : \"hidden\")};\n  pointer-events: ${({ connected }) => (connected ? \"auto\" : \"none\")};\n\n  &:hover {\n    transform: translateY(-1px);\n    opacity: 0.5;\n  }\n`;\n\ninterface IHeaderProps {\n  killSession: () => void;\n  connected: boolean;\n  address: string;\n  chainId: number;\n}\n\nconst Header = (props: IHeaderProps) => {\n  const { connected, address, chainId, killSession } = props;\n  const chainData = chainId ? getChainData(chainId) : null;\n  return (\n    <SHeader {...props}>\n      {address && (\n        <SActiveAccount>\n          <SBlockie address={address} />\n          <SAddress connected={connected}>{ellipseAddress(address)}</SAddress>\n          <SDisconnect connected={connected} onClick={killSession}>\n            {\"Disconnect\"}\n          </SDisconnect>\n        </SActiveAccount>\n      )}\n    </SHeader>\n  );\n};\n\nHeader.propTypes = {\n  killSession: PropTypes.func.isRequired,\n  address: PropTypes.string,\n};\n\nexport default Header;\n","/Users/rheeger/Code/github.com/rheeger/zetch-a-sketch/src/components/Modal.tsx",[],"/Users/rheeger/Code/github.com/rheeger/zetch-a-sketch/src/components/Loader.tsx",[],"/Users/rheeger/Code/github.com/rheeger/zetch-a-sketch/src/components/ModalResult.tsx",[],"/Users/rheeger/Code/github.com/rheeger/zetch-a-sketch/src/components/ConnectButton.tsx",[],"/Users/rheeger/Code/github.com/rheeger/zetch-a-sketch/src/helpers/api.ts",[],["130","131"],"/Users/rheeger/Code/github.com/rheeger/zetch-a-sketch/src/helpers/utilities.ts",["132","133","134","135"],"import { IChainData } from \"./types\";\nimport supportedChains from \"./chains\";\nimport { apiGetGasPrices, apiGetAccountNonce } from \"./api\";\nimport { convertAmountToRawNumber, convertStringToHex } from \"./bignumber\";\n\nexport function capitalize(string: string): string {\n  return string\n    .split(\" \")\n    .map(word => word.charAt(0).toUpperCase() + word.slice(1).toLowerCase())\n    .join(\" \");\n}\n\nexport function ellipseText(\n  text: string = \"\",\n  maxLength: number = 9999\n): string {\n  if (text.length <= maxLength) {\n    return text;\n  }\n  const _maxLength = maxLength - 3;\n  let ellipse = false;\n  let currentLength = 0;\n  const result =\n    text\n      .split(\" \")\n      .filter(word => {\n        currentLength += word.length;\n        if (ellipse || currentLength >= _maxLength) {\n          ellipse = true;\n          return false;\n        } else {\n          return true;\n        }\n      })\n      .join(\" \") + \"...\";\n  return result;\n}\n\nexport function ellipseAddress(\n  address: string = \"\",\n  width: number = 3\n): string {\n  return `${address.slice(0, width)}...${address.slice(-width)}`;\n}\n\nexport function padLeft(n: string, width: number, z?: string): string {\n  z = z || \"0\";\n  n = n + \"\";\n  return n.length >= width ? n : new Array(width - n.length + 1).join(z) + n;\n}\n\nexport function sanitizeHex(hex: string): string {\n  hex = hex.substring(0, 2) === \"0x\" ? hex.substring(2) : hex;\n  if (hex === \"\") {\n    return \"\";\n  }\n  hex = hex.length % 2 !== 0 ? \"0\" + hex : hex;\n  return \"0x\" + hex;\n}\n\nexport function removeHexPrefix(hex: string): string {\n  return hex.toLowerCase().replace(\"0x\", \"\");\n}\n\nexport function getDataString(func: string, arrVals: any[]): string {\n  let val = \"\";\n  for (let i = 0; i < arrVals.length; i++) {\n    val += padLeft(arrVals[i], 64);\n  }\n  const data = func + val;\n  return data;\n}\n\nexport function isMobile(): boolean {\n  let mobile: boolean = false;\n\n  function hasTouchEvent(): boolean {\n    try {\n      document.createEvent(\"TouchEvent\");\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  function hasMobileUserAgent(): boolean {\n    if (\n      /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|ipad|iris|kindle|Android|Silk|lge |maemo|midp|mmp|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows (ce|phone)|xda|xiino/i.test(\n        navigator.userAgent\n      ) ||\n      /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw-(n|u)|c55\\/|capi|ccwa|cdm-|cell|chtm|cldc|cmd-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc-s|devi|dica|dmob|do(c|p)o|ds(12|-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(-|_)|g1 u|g560|gene|gf-5|g-mo|go(.w|od)|gr(ad|un)|haie|hcit|hd-(m|p|t)|hei-|hi(pt|ta)|hp( i|ip)|hs-c|ht(c(-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i-(20|go|ma)|i230|iac( |-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|-[a-w])|libw|lynx|m1-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|-([1-8]|c))|phil|pire|pl(ay|uc)|pn-2|po(ck|rt|se)|prox|psio|pt-g|qa-a|qc(07|12|21|32|60|-[2-7]|i-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h-|oo|p-)|sdk\\/|se(c(-|0|1)|47|mc|nd|ri)|sgh-|shar|sie(-|m)|sk-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h-|v-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl-|tdg-|tel(i|m)|tim-|t-mo|to(pl|sh)|ts(70|-|m3|m5)|tx-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas-|your|zeto|zte-/i.test(\n        navigator.userAgent.substr(0, 4)\n      )\n    ) {\n      return true;\n    } else if (hasTouchEvent()) {\n      return true;\n    }\n    return false;\n  }\n\n  mobile = hasMobileUserAgent();\n\n  return mobile;\n}\n\nexport function getChainData(chainId: number): IChainData {\n  const chainData = supportedChains.filter(\n    (chain: any) => chain.chain_id === chainId\n  )[0];\n\n  if (!chainData) {\n    throw new Error(\"ChainId missing or not supported\");\n  }\n\n  const API_KEY = process.env.REACT_APP_INFURA_ID;\n\n  if (\n    chainData.rpc_url.includes(\"infura.io\") &&\n    chainData.rpc_url.includes(\"%API_KEY%\") &&\n    API_KEY\n  ) {\n    const rpcUrl = chainData.rpc_url.replace(\"%API_KEY%\", API_KEY);\n\n    return {\n      ...chainData,\n      rpc_url: rpcUrl\n    };\n  }\n\n  return chainData;\n}\n\nexport function isObject(obj: any): boolean {\n  return typeof obj === \"object\" && !!Object.keys(obj).length;\n}\n","/Users/rheeger/Code/github.com/rheeger/zetch-a-sketch/src/helpers/chains.ts",[],"/Users/rheeger/Code/github.com/rheeger/zetch-a-sketch/src/components/Banner.tsx",[],"/Users/rheeger/Code/github.com/rheeger/zetch-a-sketch/src/components/Blockie.tsx",[],["136","137"],"/Users/rheeger/Code/github.com/rheeger/zetch-a-sketch/src/hooks/useIpfs.ts",[],"/Users/rheeger/Code/github.com/rheeger/zetch-a-sketch/src/helpers/storeHash.ts",[],["138","139"],"/Users/rheeger/Code/github.com/rheeger/zetch-a-sketch/src/helpers/web3.ts",[],"/Users/rheeger/Code/github.com/rheeger/zetch-a-sketch/src/hooks/useActiveWeb3React.ts",[],{"ruleId":"140","replacedBy":"141"},{"ruleId":"142","replacedBy":"143"},{"ruleId":"144","severity":1,"message":"145","line":8,"column":19,"nodeType":"146","messageId":"147","endLine":8,"endColumn":29},{"ruleId":"144","severity":1,"message":"148","line":17,"column":11,"nodeType":"146","messageId":"147","endLine":17,"endColumn":14},{"ruleId":"140","replacedBy":"149"},{"ruleId":"142","replacedBy":"150"},{"ruleId":"144","severity":1,"message":"151","line":8,"column":17,"nodeType":"146","messageId":"147","endLine":8,"endColumn":25},{"ruleId":"152","severity":1,"message":"153","line":201,"column":9,"nodeType":"154","endLine":209,"endColumn":10},{"ruleId":"144","severity":1,"message":"155","line":5,"column":8,"nodeType":"146","messageId":"147","endLine":5,"endColumn":14},{"ruleId":"144","severity":1,"message":"156","line":69,"column":9,"nodeType":"146","messageId":"147","endLine":69,"endColumn":18},{"ruleId":"140","replacedBy":"157"},{"ruleId":"142","replacedBy":"158"},{"ruleId":"144","severity":1,"message":"159","line":3,"column":10,"nodeType":"146","messageId":"147","endLine":3,"endColumn":25},{"ruleId":"144","severity":1,"message":"160","line":3,"column":27,"nodeType":"146","messageId":"147","endLine":3,"endColumn":45},{"ruleId":"144","severity":1,"message":"161","line":4,"column":10,"nodeType":"146","messageId":"147","endLine":4,"endColumn":34},{"ruleId":"144","severity":1,"message":"162","line":4,"column":36,"nodeType":"146","messageId":"147","endLine":4,"endColumn":54},{"ruleId":"140","replacedBy":"163"},{"ruleId":"142","replacedBy":"164"},{"ruleId":"140","replacedBy":"165"},{"ruleId":"142","replacedBy":"166"},"no-native-reassign",["167"],"no-negated-in-lhs",["168"],"@typescript-eslint/no-unused-vars","'setDataUrl' is assigned a value but never used.","Identifier","unusedVar","'ext' is assigned a value but never used.",["167"],["168"],"'useState' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Banner' is defined but never used.","'chainData' is assigned a value but never used.",["167"],["168"],"'apiGetGasPrices' is defined but never used.","'apiGetAccountNonce' is defined but never used.","'convertAmountToRawNumber' is defined but never used.","'convertStringToHex' is defined but never used.",["167"],["168"],["167"],["168"],"no-global-assign","no-unsafe-negation"]